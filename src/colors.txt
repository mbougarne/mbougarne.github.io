/*
33C173 Navigation background / use template / delete edit icons
258D54 Navigation icon hover/active

2B2F32 headlines

ECECEE top bar background
C4C4C4 role icon
808285 role default role label / numbers / users assigned

F2F4F5 add custom role background / cancel
EEF3F5 Permission inactive button
ABAFB1 Permission inactive button text / placeholder
83898C Page label / page back icon

5E6366 input label / cancel button text

F57E77 error
*/

/* System theme */
import { FC } from 'react';
import { ThemeProvider, createTheme, useColorScheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import RadioGroup from '@mui/material/RadioGroup';
import Radio from '@mui/material/Radio';
import FormControl from '@mui/material/FormControl';
import FormControlLabel from '@mui/material/FormControlLabel';
import FormLabel from '@mui/material/FormLabel';

const theme = createTheme({
  colorSchemes: {
    dark: {
      palette: {
        primary: {
          main: '#33C173',
          dark: '#258D54',
          contrastText: '#fff',
        },
        secondary: {
          main: '#2B2F32',
        },
        error: {
          main: '#F57E77',
        },
      },
    },
    light: {
      palette: {
        primary: {
          main: '#33C173',
          dark: '#258D54',
          contrastText: '#fff',
        },
        secondary: {
          main: '#2B2F32',
        },
        error: {
          main: '#F57E77',
        },
      },
    }
  },
});
           

const ChangeThemeComponent: FC = () => {
  const { mode, setMode } = useColorScheme();

  if(!mode) {
    return null;
  }

  return (
    <Box
      sx={{
        display: 'flex',
        width: '100%',
        alignItems: 'center',
        justifyContent: 'center',
        bgcolor: 'background.default',
        color: 'text.primary',
        borderRadius: 1,
        p: 3,
        minHeight: '56px',
      }}
    >
      <FormControl>
        <FormLabel id="demo-theme-toggle">Theme</FormLabel>
        <RadioGroup
          aria-labelledby="demo-theme-toggle"
          name="theme-toggle"
          row
          value={mode}
          onChange={(event) =>
            setMode(event.target.value as 'system' | 'light' | 'dark')
          }
        >
          <FormControlLabel value="system" control={<Radio />} label="System" />
          <FormControlLabel value="light" control={<Radio />} label="Light" />
          <FormControlLabel value="dark" control={<Radio />} label="Dark" />
        </RadioGroup>
      </FormControl>
    </Box>
  )
}

export const App: FC = () => {
  return (
    <ThemeProvider theme={theme}>
      <ChangeThemeComponent />
    </ThemeProvider>
  );
};
